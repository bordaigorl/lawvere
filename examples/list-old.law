ar Cat list : Base --> Base =
  [ empty : {:},
    cons : { head : ,
             tail : list } ]

ar map : (list(Int) => Int, list(list(Int))) --> list(Int) =
  { f = .1, xs = .2 }
  @xs
  [ empty = {=} empty.,
    cons = { head = ( .f, .xs .head ) app,
             tail = ( .f, .xs .tail ) map }
           cons. ]

ar length : list(Int) --> Int =
  [ empty = 0,
    cons  = 1 + .tail length ]

ar main : {:} --> list(Int) = listOfLists list(length)


// Some lists follow

ar list3 : {:} --> list(Int) =
  #(1, 3, 4)

ar list2 : {:} --> list(Int) =
  #(200, 300)

ar listOfLists : {:} --> list(list(Int)) =
  #(list2, list3)
